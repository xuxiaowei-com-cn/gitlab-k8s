stages:
  - pages
  - docker:build
  - docker:deploy
  - sync

variables:
  DOCKER_TAG: 0.0.1

pages:
  stage: pages
  image: node:18.17.1
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - node_modules/
  script:
    - if [ $CI_SERVER_HOST == 'gitlab.helm.xuxiaowei.cn' ]; then
      yarn config set registry https://registry.npmmirror.com;
      fi
    - if [ $CI_SERVER_HOST == 'jihulab.com' ]; then
      yarn config set registry https://registry.npmmirror.com;
      fi
    - yarn
    - yarn build
    - mv build/ public/
  artifacts:
    expire_in: 1 week
    paths:
      - public/
  rules:
    - if: $CI_COMMIT_BRANCH == "main" && $ENABLE_DOCS == "true"

build:npm:
  stage: pages
  image: node:18.17.1
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - node_modules/
  script:
    - if [ $CI_SERVER_HOST == 'gitlab.helm.xuxiaowei.cn' ]; then
      npm config set registry https://registry.npmmirror.com;
      fi
    - if [ $CI_SERVER_HOST == 'jihulab.com' ]; then
      npm config set registry https://registry.npmmirror.com;
      fi
    - npm install
    - npm run build
    - mv build/ public/
  artifacts:
    expire_in: 1 week
    paths:
      - public/
  rules:
    - if: $CI_COMMIT_BRANCH == "main" && $ENABLE_DOCS == "true"

build:pnpm:
  stage: pages
  image: node:18.17.1
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - node_modules/
  script:
    - if [ $CI_SERVER_HOST == 'gitlab.helm.xuxiaowei.cn' ]; then
      yarn config set registry https://registry.npmmirror.com;
      fi
    - if [ $CI_SERVER_HOST == 'jihulab.com' ]; then
      yarn config set registry https://registry.npmmirror.com;
      fi
    - yarn global add pnpm
    - if [ $CI_SERVER_HOST == 'gitlab.helm.xuxiaowei.cn' ]; then
      pnpm config set registry https://registry.npmmirror.com;
      fi
    - pnpm install
    - pnpm run build
    - mv build/ public/
  artifacts:
    expire_in: 1 week
    paths:
      - public/
  rules:
    - if: $CI_COMMIT_BRANCH == "main" && $ENABLE_DOCS == "true"

docker:build:
  stage: docker:build
  image:
    name: xuxiaoweicomcn/kaniko-project-executor:v1.22.0-debug
    entrypoint: [""]
  needs:
    - job: pages
      artifacts: true
  before_script:
    - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"},\"https://index.docker.io/v1/\":{\"auth\":\"$(printf "%s:%s" ${DOCKER_USERNAME} "${DOCKER_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
  script:
    - echo $DOCKER_TAG
    - /kaniko/executor version
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --build-arg "CI_PIPELINE_URL=${CI_PIPELINE_URL}"
      --destination "${CI_REGISTRY_IMAGE}:${DOCKER_TAG}"
      --destination "${CI_REGISTRY_IMAGE}:${DOCKER_TAG}-${CI_PIPELINE_ID}"
      --destination "xuxiaoweicomcn/gitlab-k8s:${DOCKER_TAG}"
      --destination "xuxiaoweicomcn/gitlab-k8s:${DOCKER_TAG}-${CI_PIPELINE_ID}"
  rules:
    - if: $CI_COMMIT_BRANCH == "main" && $ENABLE_DOCS_DOCKER == "true"

docker:deploy:
  stage: docker:deploy
  needs:
    - job: docker:build
  image: docker:26.1.1-cli
  variables:
    DOCKER_HOST: $DEPLOY_DOCKER_HOST
  script:
    - docker info
    - docker compose up -d
  environment: production
  rules:
    - if: $CI_COMMIT_BRANCH == "main" && $ENABLE_DOCS_DOCKER_DEPLOY == "true"
  tags:
    - lighthouse-docker

# 嵌入
include:
  # 同步代码
  - /sync.yml
